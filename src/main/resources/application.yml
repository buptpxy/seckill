server:
  port: 8080

spring:
  datasource:
    name: springboot
    type: com.alibaba.druid.pool.DruidDataSource
    #druid相关配置
    druid:
      #监控统计拦截的filters
      filter: stat
      #mysql驱动
      driver-class-name: com.mysql.cj.jdbc.Driver
      #基本属性
      url: jdbc:mysql://127.0.0.1:3306/pxy?characterEncoding=utf8&allowMultiQueries=true&useUnicode=true&useSSL=false&serverTimezone=GMT%2B8
      username: root
      password: 123456
      #配置初始化大小/最小/最大
      initial-size: 100
      min-idle: 500
      max-active: 1000
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxOpenPreparedStatements: 20
  thymeleaf:
    prefix: classpath:/templates/page/
    check-template-location: true
    suffix: .html
    encoding: UTF-8
    mode: LEGACYHTML5
    cache: false

  #文件上传相关设置,将10MB改为10000000，100MB改为100000000
  servlet:
    multipart:
      max-file-size: 10000000
      max-request-size: 100000000

  #devtools插件
  devtools:
    livereload:
      enabled: true #是否支持livereload
      port: 35729
    restart:
      enabled: true #是否支持热部署

  #static
  resources:
    add-mappings: true #是否开启默认的资源处理，默认为true
    #cache-period: 3600 #设定资源的缓存时效，以秒为单位.
    chain:
      cache: true #是否开启缓存，默认为: true
      enabled: true #是否开启资源 handling chain，默认为false
      #gzipped: true
      html-application-cache: true #是否开启h5应用的cache manifest重写，默认为: false
    static-locations: classpath:/static/
  #rabbitmq
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: pxy
    password: 123456
    virtual-host: /

    listener:
      simple:
        concurrency: 10 #消费者数量
        max-concurrency: 10 #最大消费者数量
        #消费者每次从队列获取的消息数量。写多了，如果长时间得不到消费，数据就一直得不到处理
        prefetch: 1
        #消费者自动启动
        auto-startup: true
        #消费者消费失败，自动重新入队
        default-requeue-rejected: true

    template:
      retry:
        enabled: true #启用发送重试 队列满了发不进去时启动重试
        initial-interval: 1000 #1秒钟后重试一次
        max-attempts: 3 #最大重试次数 3次
        max-interval: 10000 #最大间隔 10秒钟
        multiplier: 1.0 #等待间隔 的倍数。如果为2  第一次 乘以2 等1秒， 第二次 乘以2 等2秒 ，第三次 乘以2 等4秒


#redis缓存 ，注意redis的缩进，有缩进代表是二级prefix!
redis:
  #redis数据库索引，默认是0
  database: 0
  #redis服务器地址，这里用本地的redis
  host: 127.0.0.1
  # Redis服务器连接密码（默认为空）
  password: 123456
  #redis服务器连接端口，默认是6379
  port: 6379
  # 连接超时时间（秒）
  timeout: 10
  #jedis高版本的配置方式
  poolMaxTotal: 1000
  poolMaxIdle: 500
  poolMaxWait: 500
#    jedis:
#      pool:
#        # 连接池最大连接数（使用负值表示没有限制）
#        max-active: 8
#        # 连接池最大阻塞等待时间（使用负值表示没有限制
#        max-wait: -1
#        # 连接池中的最大空闲连接
#        max-idle: 8
#        # 连接池中的最小空闲连接
#        min-idle: 0

#mybatis配置
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.pxy.seckill.entity
  configuration:
    # 使用jdbc的getGeneratedKeys 可以获取数据库自增主键值
    use-generated-keys: true
    # 使用列别名替换列名，默认true。如：select name as title from table
    use-column-label: true
    # 开启驼峰命名转换，如：Table(create_time) -> Entity(createTime)。不需要我们关心怎么进行字段匹配，mybatis会自动识别`大写字母与下划线`
    map-underscore-to-camel-case: true

# 打印sql
logging:
  level:
    com.pxy.seckill.mapper: DEBUG
